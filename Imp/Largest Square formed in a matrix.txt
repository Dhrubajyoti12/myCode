// Largest Square formed of 1's in a binary matrix // Flipkart
#include <bits/stdc++.h>
using namespace std;
#define MAX 52
int dp[52][52];

int maxArea(int M[MAX][MAX], int n, int m) {
    // Your code here
    memset(dp,0,sizeof(dp));
    int res=0;
    for(int i=0;i<n;i++)
    {
        dp[i][0]=M[i][0];
        if(dp[i][0]==1)
        res=1;
    }
    for(int i=0;i<m;i++)
    {
        dp[0][i]=M[0][i];
        if(dp[0][i]==1)
        res=1;
    }
    for(int i=1;i<n;i++)
    {
        for(int j=1;j<m;j++)
        {
            if(M[i][j]==0)
            continue;
            int t=min(min(dp[i-1][j-1],dp[i-1][j]),dp[i][j-1]);
            dp[i][j]=t+1;
            if(dp[i][j]>res)
            res=dp[i][j];
        }
    }
    return res;
   
}

int main() {
	//code
	int t;
	cin>>t;
	while(t--)
	{
	    int n,m;
	    cin>>n>>m;
	    int M[MAX][MAX];
	    for(int i=0;i<n;i++)
	    {
	        for(int j=0;j<m;j++)
	        cin>>M[i][j];
	    }
	    cout<<maxArea(M,n,m)<<"\n";
	}
	return 0;
}