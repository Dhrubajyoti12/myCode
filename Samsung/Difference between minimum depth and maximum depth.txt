//Find difference between minimum depth and maximum depth of a binary tree
int minDepth(TreeNode* root) {
        if(root==NULL)
            return 0;
        else if(!root->left && !root->right)
            return 1;
       else if(!root->left)
            return 1+minDepth(root->right);
        else if(!root->right)
            return 1+minDepth(root->left); 
        return 1+min(minDepth(root->left),minDepth(root->right));
}
int maxDepth(TreeNode* root) {
       if(root==NULL)
           return 0;
        else
            return 1+max(maxDepth(root->left),maxDepth(root->right));
}
int diff(TreeNode* root)
{
	int mn=minDepth(root);
	int mx=maxDepth(root);
	return (mx-mn);
}