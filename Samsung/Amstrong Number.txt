// C++ program to determine whether the number is Armstrong number or not 
#include<bits/stdc++.h> 
using namespace std; 
  
/* Function to calculate x raised to the power y */
int power(int x, unsigned int y) 
{ 
    if( y == 0) 
        return 1; 
    if (y%2 == 0) 
        return power(x, y/2)*power(x, y/2); 
    return x*power(x, y/2)*power(x, y/2); 
} 
  
/* Function to calculate order of the number */
int order(int x) 
{ 
    int n = 0; 
    while (x) 
    { 
        n++; 
        x = x/10; 
    } 
    return n; 
} 
  
// Function to check whether the given number is 
// Armstrong number or not 
bool isArmstrong(int x) 
{ 
    // Calling order function 
    int n = order(x); 
    int temp = x, sum = 0; 
    while (temp) 
    { 
        int r = temp%10; 
        sum += power(r, n); 
        temp = temp/10; 
    } 
  
    // If satisfies Armstrong condition 
    return (sum == x); 
} 
  
// Driver Program 
int main() 
{ 
    int x = 153; 
    cout << isArmstrong(x) << endl; 
    x = 1253; 
    cout << isArmstrong(x) << endl; 
    return 0; 
} 




// C++ Program to find Nth Armstrong Number 
#include<bits/stdc++.h> 
#include<math.h> 
using namespace std; 
  
// Function to find Nth Armstrong Number 
int NthArmstrong(int n) 
{ 
    int count=0; 
      
    // upper limit from integer  
    for(int i = 1; i <= INT_MAX; i++) 
    { 
        int num=i, rem, digit=0, sum=0; 
          
        //Copy the value for num in num  
        num = i; 
          
        // Find total digits in num  
        digit = (int) log10(num) + 1; 
          
        // Calculate sum of power of digits  
        while(num > 0) 
        {  
            rem = num % 10; 
            sum = sum + pow(rem,digit); 
            num = num / 10; 
        } 
        // Check for Armstrong number  
        if(i == sum) 
            count++; 
        if(count==n) 
            return i; 
    } 
} 
  
// Driver Function 
int main() 
{ 
    int n = 12; 
    cout<<NthArmstrong(n); 
    return 0; 
} 
